
<!--#======================================================================= -->
<!--# Copyright (c) 2012, 2014 C4biz Softwares ME, Loetz KG. -->
<!--# All rights reserved. This program and the accompanying materials -->
<!--# are made available under the terms of the Eclipse Public License v1.0 -->
<!--# which accompanies this distribution, and is available at -->
<!--# http://www.eclipse.org/legal/epl-v10.html -->
<!--# -->
<!--# Contributors: -->
<!--# Cristiano GaviÃ£o (C4biz)- initial API and implementation -->
<!--#======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.lunifera.releng.maven</groupId>
		<artifactId>lunifera-releng-maven</artifactId>
		<version>0.9.6</version>
		<relativePath>../pom.xml</relativePath>
	</parent>

	<artifactId>lunifera-releng-maven-parent-mbp</artifactId>
	<name>Lunifera Releng Maven - Parent POM for Pom-First Bundles and Fragments</name>
	<description>A parent POM aimed to set up the build of bundle projects using Maven-Bundle-Plugin/Bnd.</description>
	<packaging>pom</packaging>

	<properties>
		<mbp.version>2.5.0</mbp.version>
		<license.copyrightOwners>C4biz Softwares ME, Loetz KG</license.copyrightOwners>
		<bundle.full.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</bundle.full.version>
		<bundle.short.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</bundle.short.version>
	</properties>

	<scm>
		<connection>${lunifera.scm.connection}</connection>
		<developerConnection>${lunifera.scm.connection.dev}</developerConnection>
		<tag>v0.9.6</tag>
	</scm>

	<profiles>
		<profile>
			<id>not-in-eclipse-mbp</id>
			<!-- activated in normal Maven build -->
			<activation>
				<property>
					<name>!m2e.version</name>
				</property>
			</activation>
			<properties>
				<osgi-version-qualifier>${maven.build.timestamp}</osgi-version-qualifier>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-clean-plugin</artifactId>
							<configuration>
								<filesets>
									<fileset>
										<directory>${basedir}</directory>
										<includes>
											<include>*.jar</include>
											<include>META-INF/</include>
											<include>OSGI-INF/</include>
										</includes>
										<followSymlinks>false</followSymlinks>
									</fileset>
								</filesets>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.felix</groupId>
							<artifactId>maven-bundle-plugin</artifactId>
							<version>${mbp.version}</version>
							<extensions>true</extensions>
							<executions>
								<execution>
									<id>bundle</id>
									<goals>
										<goal>bundle</goal>
									</goals>
									<inherited>true</inherited>
									<configuration>
										<instructions>
											<Bundle-Vendor>Lunifera.org</Bundle-Vendor>
											<Bundle-Name>${project.name}</Bundle-Name>
											<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
											<Bundle-Version>${bundle.full.version}</Bundle-Version>
											<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
											<_snapshot>${osgi-version-qualifier}</_snapshot>
											<Bundle-RequiredExecutionEnvironment>JavaSE-1.7</Bundle-RequiredExecutionEnvironment>
											<_dsannotations>*</_dsannotations>
											<!-- <Include-Resource>{maven-resources},META-INF/LICENSE=LICENSE,META-INF/NOTICE=NOTICE,META-INF/DEPENDENCIES=DEPENDENCIES</Include-Resource> -->
											<_versionpolicy>[$(version;==;$(@)),$(version;+;$(@)))</_versionpolicy>
											<_removeheaders>Private-Package,Ignore-Package,Include-Resource</_removeheaders>
										</instructions>
									</configuration>
								</execution>
								<execution>
									<id>baseline</id>
									<goals>
										<goal>baseline</goal>
									</goals>
									<configuration>
										<!-- <comparisonVersion>0.1.2</comparisonVersion> -->
										<failOnWarning>true</failOnWarning>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
						<reportSets>
							<reportSet>
								<id>baseline-report</id>
								<reports>
									<report>baseline-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
		</profile>
		<profile>
			<id>in-eclipse-mbp</id>
			<!-- activated only when running in m2e (eclipse) -->
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<properties>
				<osgi-version-qualifier>qualifier</osgi-version-qualifier>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.apache.felix</groupId>
							<artifactId>maven-bundle-plugin</artifactId>
							<version>${mbp.version}</version>
							<extensions>true</extensions>
							<configuration>
								<unpackBundle>true</unpackBundle>
								<manifestLocation>${basedir}/META-INF</manifestLocation>
								<instructions>
									<Bundle-Vendor>Lunifera.org</Bundle-Vendor>
									<Bundle-Name>${project.name}</Bundle-Name>
									<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
									<Bundle-Version>${bundle.full.version}</Bundle-Version>
									<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									<_snapshot>${osgi-version-qualifier}</_snapshot>
									<Bundle-RequiredExecutionEnvironment>JavaSE-1.7</Bundle-RequiredExecutionEnvironment>
									<_dsannotations>*</_dsannotations>
								</instructions>
							</configuration>
						</plugin>
						<plugin>
							<artifactId>maven-dependency-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-dependencies</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>copy-dependencies</goal>
									</goals>
									<configuration>
										<outputDirectory>${basedir}</outputDirectory>
										<includeScope>runtime</includeScope>
										<overWriteReleases>false</overWriteReleases>
										<overWriteSnapshots>true</overWriteSnapshots>
										<overWriteIfNewer>true</overWriteIfNewer>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<executions>
								<execution>
									<id>delete-osgi-inf</id>
									<phase>clean</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<taskdef resource="net/sf/antcontrib/antlib.xml" />
											<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
											<if>
												<available file="${basedir}/OSGI-INF" type="dir" />
												<then>
													<delete dir="${basedir}/OSGI-INF" quiet="true" />
												</then>
											</if>
										</target>
									</configuration>
								</execution>
								<execution>
									<id>copy-osgi-inf</id>
									<phase>package</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<taskdef resource="net/sf/antcontrib/antlib.xml" />
											<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
											<if>
												<available file="${project.build.outputDirectory}/OSGI-INF" type="dir" />
												<then>
													<echo message="Copying OSGI-INF..." level="info" />
													<mkdir dir="${basedir}/OSGI-INF" />
													<copy todir="${basedir}/OSGI-INF">
														<fileset dir="${project.build.outputDirectory}/OSGI-INF" />
													</copy>
												</then>
											</if>
										</target>
									</configuration>
								</execution>
							</executions>
							<dependencies>
								<dependency>
									<groupId>org.apache.ant</groupId>
									<artifactId>ant</artifactId>
									<version>1.8.4</version>
								</dependency>
								<dependency>
									<groupId>ant-contrib</groupId>
									<artifactId>ant-contrib</artifactId>
									<version>1.0b3</version>
									<exclusions>
										<exclusion>
											<groupId>ant</groupId>
											<artifactId>ant</artifactId>
										</exclusion>
									</exclusions>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
				</pluginManagement>
				<!-- <resources> -->
				<!-- <resource> -->
				<!-- pde (project root) -->
				<!-- <directory>src/main/resources</directory> -->
				<!-- <targetPath> -->
				<!-- ${basedir} -->
				<!-- </targetPath> -->
				<!-- <includes> -->
				<!-- <include>plugin.xml</include> -->
				<!-- </includes> -->
				<!-- </resource> -->
				<!-- <resource> -->
				<!-- normal (output dir , /target/classes) -->
				<!-- <directory>src/main/resources</directory> -->
				<!-- <targetPath> -->
				<!-- ${project.build.outputDirectory} -->
				<!-- </targetPath> -->
				<!-- </resource> -->
				<!-- </resources> -->
			</build>
		</profile>

		<profile>
			<id>whenIsIntegrationTestsProject.m2e</id>
			<!-- This profile is only activated when a .lunifera.releng.itests file 
				were found. -->
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
				<file>
					<exists>.lunifera.releng.itests</exists>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.lunifera.runtime</groupId>
					<artifactId>org.lunifera.runtime.utils.paxexam</artifactId>
					<version>${lunifera.utils.version}</version>
				</dependency>
				<dependency>
					<groupId>org.lunifera.releng.maven</groupId>
					<artifactId>lunifera-releng-maven-fpom-felix</artifactId>
					<version>${project.version}</version>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.lunifera.releng.maven</groupId>
					<artifactId>lunifera-releng-maven-fpom-node</artifactId>
					<version>${project.version}</version>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>whenIsIntegrationTestsProject</id>
			<activation>
				<file>
					<exists>.lunifera.releng.itests</exists>
				</file>
			</activation>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.lunifera.runtime</groupId>
						<artifactId>org.lunifera.runtime.utils.paxexam</artifactId>
						<version>${lunifera.utils.version}</version>
					</dependency>
					<dependency>
						<groupId>org.lunifera.releng.maven</groupId>
						<artifactId>lunifera-releng-maven-fpom-node</artifactId>
						<version>${project.version}</version>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>
			<dependencies>
				<dependency>
					<groupId>org.lunifera.releng.maven</groupId>
					<artifactId>lunifera-releng-maven-fpom-node</artifactId>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>org.lunifera.runtime</groupId>
					<artifactId>org.lunifera.runtime.utils.paxexam</artifactId>
					<scope>test</scope>
				</dependency>
			</dependencies>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.ops4j.pax.exam</groupId>
							<artifactId>maven-paxexam-plugin</artifactId>
							<version>1.2.4</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-plugin</artifactId>
							<version>${surefire.version}</version>
							<configuration>
								<argLine>${jacoco.agent.ut.arg}</argLine>
								<!-- Specific to generate mapping between tests and covered code -->
								<properties>
									<property>
										<name>listener</name>
										<value>org.sonar.java.jacoco.JUnitListener</value>
									</property>
								</properties>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-failsafe-plugin</artifactId>
							<version>${surefire.version}</version>
							<inherited>true</inherited>
							<configuration>
								<argLine>${jacoco.agent.it.arg} -Xmx1024m -XX:MaxPermSize=256m</argLine>
								<failIfNoTests>false</failIfNoTests>
								<includes>
									<include>**/*IntegrationTest.java</include>
								</includes>
								<systemProperties>
									<property>
										<name>project.version</name>
										<value>${project.version}</value>
									</property>
								</systemProperties>
								<!-- Specific to generate mapping between tests and covered code -->
								<properties>
									<property>
										<name>listener</name>
										<value>org.sonar.java.jacoco.JUnitListener</value>
									</property>
								</properties>
								<!-- Let's put failsafe reports with surefire to have access to tests 
									failures/success reports in sonar -->
								<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
							</configuration>
							<executions>
								<execution>
									<id>integration-test</id>
									<goals>
										<goal>integration-test</goal>
									</goals>
								</execution>
								<execution>
									<id>verify</id>
									<goals>
										<goal>verify</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.ops4j.pax.exam</groupId>
						<artifactId>maven-paxexam-plugin</artifactId>
						<executions>
							<execution>
								<id>generate-config</id>
								<phase>generate-resources</phase>
								<goals>
									<goal>generate-depends-file</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<executions>
							<execution>
								<id>integration-test</id>
								<goals>
									<goal>integration-test</goal>
								</goals>
								<configuration>
									<systemProperties>
										<property>
											<name>project.version</name>
											<value>${project.version}</value>
										</property>
										<property>
											<name>osgi.framework</name>
											<value>${osgi.framework}</value>
										</property>
									</systemProperties>
								</configuration>
							</execution>
							<execution>
								<id>verify</id>
								<phase>verify</phase>
								<goals>
									<goal>verify</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>whenIsIntegrationTestsProject.felix</id>
			<activation>
				<property>
					<name>osgi.framework</name>
					<value>felix</value>
				</property>
				<file>
					<exists>.lunifera.releng.itests</exists>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.lunifera.releng.maven</groupId>
					<artifactId>lunifera-releng-maven-fpom-felix</artifactId>
					<version>${project.version}</version>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>whenIsIntegrationTestsProject.equinox.luna</id>
			<!-- LUNA 3.10 -->
			<activation>
				<property>
					<name>osgi.framework</name>
					<value>equinox_luna</value>
				</property>
				<file>
					<exists>.lunifera.releng.itests</exists>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.lunifera.releng.maven</groupId>
					<artifactId>lunifera-releng-maven-fpom-equinox-luna</artifactId>
					<version>${project.version}</version>
					<type>pom</type>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>javadoc</id>
			<activation>
				<property>
					<name>lunifera.build.full</name>
				</property>
			</activation>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${report.javadoc.version}</version>
						<configuration>
							<skip>${maven.javadoc.skip}</skip>
							<quiet>${maven.javadoc.quiet}</quiet>
							<charset>${project.reporting.outputEncoding}</charset>
							<links>
								<link>http://docs.oracle.com/javase/${javadocJreApiVersion}/docs/api/</link>
							</links>
							<!--<excludePackageNames>${maven.javadoc.excludePackageNames}</excludePackageNames> -->
							<tagletArtifacts>
								<tagletArtifact>
									<groupId>org.apache.maven.plugin-tools</groupId>
									<artifactId>maven-plugin-tools-javadoc</artifactId>
									<version>3.3</version>
								</tagletArtifact>
								<tagletArtifact>
									<groupId>org.codehaus.plexus</groupId>
									<artifactId>plexus-component-javadoc</artifactId>
									<version>1.5.5</version>
								</tagletArtifact>
							</tagletArtifacts>
						</configuration>
						<reportSets>
							<reportSet>
								<id>non-aggregate</id>
								<reports>
									<report>javadoc</report>
									<!-- <report>test-javadoc</report> -->
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
			<build>
				<plugins>
					<!-- Generates Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sources</id>
			<activation>
				<property>
					<name>lunifera.build.full</name>
				</property>
			</activation>
			<build>
				<plugins>
					<!-- Generates jar with sources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.2.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>verify</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<excludeResources>true</excludeResources>
							<excludes>
								<exclude>**/jars/**</exclude>
							</excludes>
							<archive>
								<manifestEntries>
									<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
									<Bundle-Name>${project.name}</Bundle-Name>
									<Bundle-SymbolicName>${project.artifactId}.source</Bundle-SymbolicName>
									<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
									<Bundle-Version>${bundle.full.version}</Bundle-Version>
									<Eclipse-SourceBundle>${project.artifactId};version="${bundle.full.version}";roots:="."</Eclipse-SourceBundle>
								</manifestEntries>
							</archive>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>pre-release</id>
			<activation>
				<property>
					<name>lunifera.build.release</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<inherited>true</inherited>
						<configuration>
							<failFast>true</failFast>
							<fail>true</fail>
						</configuration>
						<executions>
							<execution>
								<id>check-project-files</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<rules>
										<requireFilesExist>
											<files>
												<file>LICENSE.txt</file>
												<!-- <file>NOTICE.txt</file> -->
												<!-- <file>README.txt</file> -->
												<!--<file>changelog.txt</file> -->
											</files>
										</requireFilesExist>
									</rules>
									<ignoreCache>true</ignoreCache>
									<failFast>true</failFast>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>extra-enforcer-rules</artifactId>
								<version>1.0-beta-2</version>
							</dependency>
						</dependencies>
					</plugin>

					<!-- Checks compatibility with Java API -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>animal-sniffer-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-java-api-compatibility</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<signature>
										<groupId>org.codehaus.mojo.signature</groupId>
										<artifactId>java17</artifactId>
										<version>1.0</version>
									</signature>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.lunifera.releng.maven</groupId>
			<artifactId>lunifera-releng-maven-licenses</artifactId>
			<classifier>third-party</classifier>
			<type>properties</type>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>
