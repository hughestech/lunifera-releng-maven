<!--#======================================================================= -->
<!--# Copyright (c) 2012, 2014 C4biz Softwares ME, Loetz KG. -->
<!--# All rights reserved. This program and the accompanying materials -->
<!--# are made available under the terms of the Eclipse Public License v1.0 -->
<!--# which accompanies this distribution, and is available at -->
<!--# http://www.eclipse.org/legal/epl-v10.html -->
<!--# -->
<!--# Contributors: -->
<!--# Cristiano GaviÃ£o (C4biz)- initial API and implementation -->
<!--#======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.lunifera.releng.maven</groupId>
	<artifactId>org.lunifera.releng.maven.parent</artifactId>
	<name>Releng - Master Parent POM</name>
	<description>A parent POM aimed to set up the build of general Maven based projects.</description>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<inceptionYear>2012</inceptionYear>

	<prerequisites>
		<maven>3.2.1</maven>
	</prerequisites>

	<organization>
		<name>Lunifera.org</name>
		<url>www.lunifera.org</url>
	</organization>

	<issueManagement>
		<system>Jira</system>
		<url>https://lunifera.atlassian.net/browse/LS</url>
	</issueManagement>

	<!-- ciManagement, distributionManagement(Site) and scm should be duplicated 
		for every git repository (parent pom) and in most cases for each aggregator 
		due the fact that its modules uses different parents. -->

	<ciManagement>
		<system>Jenkins</system>
		<url>http://jenkins.lunifera.org:8083/job/lunifera-releng-maven/</url>
	</ciManagement>

	<url>${distribution.site.url}</url>
	<distributionManagement>
		<repository>
			<id>lunifera-nexus-release</id>
			<name>Nexus Release Repository</name>
			<url>${distribution.repository.release.url}</url>
		</repository>
		<snapshotRepository>
			<id>lunifera-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>${distribution.repository.snapshot.url}</url>
		</snapshotRepository>
		<site>
			<id>gh-pages</id>
			<name>Lunifera GitHub Pages</name>
			<url>${distribution.site.url}</url>
		</site>
	</distributionManagement>

	<scm>
		<connection>scm:git:git://github.com/lunifera/lunifera-releng-maven.git</connection>
		<developerConnection>scm:git:ssh://git@github.com:lunifera/lunifera-releng-maven.git</developerConnection>
		<url>https://github.com/lunifera/lunifera-releng-maven</url>
	</scm>
	<!-- End -->

	<licenses>
		<license>
			<name>Eclipse Public License v1.0</name>
			<url>http://www.eclipse.org/legal/epl-v10.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<properties>
		<lunifera.site.skip>false</lunifera.site.skip>
		<lunifera.deploy.skip>false</lunifera.deploy.skip>

		<!-- current profile to use: (pre-release|sandbox|retired) -->
		<lunifera.site.profile></lunifera.site.profile>

		<!-- protocol used to deploy the site -->
		<lunifera.site.protocol>github:</lunifera.site.protocol>

		<!-- points to the root of project's site at github -->
		<lunifera.site.url>http://lunifera.github.io/</lunifera.site.url>

		<!-- the name of the git repository that the aggregator represents -->
		<lunifera.aggregator.name>lunifera-releng-maven</lunifera.aggregator.name>

		<!-- the url of the repository's site -->
		<lunifera.site.repository.url>${lunifera.site.url}${lunifera.aggregator.name}</lunifera.site.repository.url>

		<!-- the complete url (to be use with distribution site settings) -->
		<distribution.site.url>${lunifera.site.protocol}${lunifera.site.url}${lunifera.aggregator.name}/${project.artifactId}</distribution.site.url>

		<!-- where to deploy the release artifacts -->
		<distribution.repository.release.url>http://maven.lunifera.org:8086/nexus/content/repositories/releases/</distribution.repository.release.url>

		<!-- where to deploy the snapshot artifacts -->
		<distribution.repository.snapshot.url>http://maven.lunifera.org:8086/nexus/content/repositories/snapshots/</distribution.repository.snapshot.url>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
		<osgi-version-qualifier>${maven.build.timestamp}</osgi-version-qualifier>

		<!-- this properties must be set in settings.xml or using -Dlunifera.developer.home 
			in command line -->
		<lunifera.developer.home>none</lunifera.developer.home>

		<!-- this properties must be unique for the entire system -->
		<lunifera.federated.repository.label>lunifera</lunifera.federated.repository.label>

		<!-- the branch used in the build of the project. this determines the behavior 
			of some steps and its properties. (branch latest head, milestone, release) -->
		<lunifera.build.branch>head</lunifera.build.branch>

		<!-- this indicate whether an old p2 published should be kept or not. this 
			should be determined by the builder.brach being used. -->
		<lunifera.deployment.p2.keep.old>false</lunifera.deployment.p2.keep.old>

		<junit.version>4.11</junit.version>
		<mockito.version>1.9.5</mockito.version>
		<osgi.testing.utils.version>1.2.2</osgi.testing.utils.version>
		<guava.version>16.0.1</guava.version>
		<osgi.version>5.0.0</osgi.version>
		<shiro.version>1.2.2</shiro.version>
		<slf4j.version>1.7.5</slf4j.version>
		<apache.aries.subsystem.version>1.0.1-SNAPSHOT</apache.aries.subsystem.version>
		<vaadin.addon.icepush.version>0.5.5</vaadin.addon.icepush.version>
		<vaadin.addon.jpacontainer.version>3.0.0</vaadin.addon.jpacontainer.version>
		<atmosphere.version>1.0.14-SNAPSHOT</atmosphere.version>
		<drools.version>6.0.1.Final</drools.version>
		<kie.version>6.0.1.Final</kie.version>
		<jbpm.version>6.0.1.Final</jbpm.version>
		<weld.version>2.1.0.Final</weld.version>
		<logback.version>1.0.13</logback.version>
		<derby.version>10.10.1.1</derby.version>
		<mongodb.version>2.11.3</mongodb.version>
		<mysql.connector.version>5.1.27</mysql.connector.version>
		<shiro.version>1.2.2</shiro.version>
		<jackrabbit.version>2.7.2</jackrabbit.version>
		<camel.version>2.12.2</camel.version>
		<vaadin.version>7.1.8</vaadin.version>
		<activemq.version>5.8.0</activemq.version>
		<wicket.version>6.12.0</wicket.version>
		<assert.utils.version>1.2.2</assert.utils.version>
		<ecf.version>3.7.1</ecf.version>
		<stanbol.version>0.11.0</stanbol.version>
		<zookeeper.version>3.4.5</zookeeper.version>
		<hazelcast.version>3.1.5</hazelcast.version>
		<copyright.years>${project.inceptionYear}, 2014</copyright.years>
		<jarsigner.tsa>https://timestamp.geotrust.com/tsa</jarsigner.tsa>
		<surefire.version>2.17</surefire.version>
		<jacoco.version>0.7.1.201405082137</jacoco.version>
		<paxexam.version>3.5.0</paxexam.version>
		<paxexam.felix.version>4.4.0</paxexam.felix.version>
		<paxurl.version>2.0.0</paxurl.version>
		<!-- The Sonar Jacoco Listener for JUnit to extract coverage details per 
			test -->
		<sonar-jacoco-listeners.version>2.2</sonar-jacoco-listeners.version>

		<report.javadoc.version>2.9.1</report.javadoc.version>
		<report.license.version>1.7</report.license.version>
		<report.version.version>2.1</report.version.version>
		<report.surefire.version>${surefire.version}</report.surefire.version>
		<report.jxr.version>2.4</report.jxr.version>
		<report.sonar.version>0.1</report.sonar.version>
		<report.project-info.version>2.7</report.project-info.version>

		<!-- license configuration -->
		<!-- default license to use for children -->
		<license.licenseName>epl_v1</license.licenseName>
		<license.useMissingFile>true</license.useMissingFile>
		<license.failIfWarning>true</license.failIfWarning>
		<license.useRepositoryMissingFiles>true</license.useRepositoryMissingFiles>

		<!-- maven plugins -->
		<maven.site.version>3.4-SNAPSHOT</maven.site.version>
	</properties>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${report.license.version}</version>
				<reportSets>
					<reportSet>
						<id>licenses-report</id>
						<reports>
							<report>third-party-report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${report.project-info.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<!-- distribution-management, index, dependencies, help, issue-tracking, 
								plugins, cim, license, dependency-management, mailing-list, project-team, 
								dependency-convergence, scm, plugin-management, modules, summary -->
							<report>index</report>
							<report>license</report>
							<report>dependencies</report>
							<report>project-team</report>
							<report>mailing-list</report>
							<report>cim</report>
							<report>issue-tracking</report>
							<report>plugin-management</report>
							<report>dependency-convergence</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<!-- Just in case the developer have forgotten to set it in settings.xml -->
			<id>set.deployment.location</id>
			<activation>
				<property>
					<name>!lunifera.developer.home</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<lunifera.developer.home>${env.HOME}${file.separator}lunifera-dev${file.separator}</lunifera.developer.home>
				<lunifera.stage.site.dir>${lunifera.developer.home}/site/</lunifera.stage.site.dir>
			</properties>
		</profile>
		<profile>
			<id>remove.old.build</id>
			<activation>
				<property>
					<name>lunifera.build.full</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>remove-old-artifacts</id>
								<phase>package</phase>
								<goals>
									<goal>remove-project-artifact</goal>
								</goals>
								<configuration>
									<removeAll>false</removeAll><!-- When true, remove all built artifacts 
										including all versions. When false, remove all built artifacts of this project 
										version -->
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- This profile is used to gather code coverage for Sonar -->
		<profile>
			<id>codeCoverage</id>
			<activation>
				<property>
					<name>lunifera.build.full</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<!-- Sonar -->
				<!-- ************************ -->
				<!-- Sonar/Reporting settings -->
				<!-- ************************ -->
				<sonar.host.url>http://88.198.33.16:9000/</sonar.host.url>

				<!-- Sonar/Jacoco integration. Note that these properties need to be 
					defined outside the "coverage" profile because we want to be to able to execute 
					mvn sonar:sonar without passing a profile -->
				<!-- Tells Sonar to use jacoco for coverage results -->
				<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

				<!-- Don't let Sonar execute tests. We will ask it to Maven -->
				<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
				<!-- The system property jacoco.outputDir needs to be override on the 
					command line with an absolute path if you want to merge results from all 
					modules. Example in a Jenkins build where ${WORKSPACE} is defined and your 
					project is in the root directory of the workspace : mvn clean install -Prun-its,coverage 
					-Djacoco.outputDir=${WORKSPACE}/target Note that unfortunately using the 
					following does not work because of http://jira.codehaus.org/browse/SONAR-3427: 
					<jacoco.outputDir>${session.executionRootDirectory}/target/</jacoco.outputDir> -->
				<jacoco.outputDir>${project.build.directory}</jacoco.outputDir>
				<!-- Jacoco output file for UTs -->
				<jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>
				<!-- Tells Sonar where the Jacoco coverage result file is located for 
					Unit Tests -->
				<sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>
				<!-- Jacoco output file for ITs -->
				<jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>
				<!-- Tells Sonar where the Jacoco coverage result file is located for 
					Integration Tests -->
				<sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>
				<sonar.language>java</sonar.language>
			</properties>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.codehaus.sonar-plugins</groupId>
						<artifactId>maven-report</artifactId>
						<version>${report.sonar.version}</version>
						<configuration>
							<sonarHostURL>${sonar.host.url}</sonarHostURL>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-report-plugin</artifactId>
						<version>${report.surefire.version}</version>
						<reportSets>
							<reportSet>
								<id>integration-tests</id>
								<reports>
									<report>report-only</report>
									<report>failsafe-report-only</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<argLine>${jacoco.agent.ut.arg}</argLine>
							<!-- Specific to generate mapping between tests and covered code -->
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-failsafe-plugin</artifactId>
						<configuration>
							<argLine>-Xmx1024m -XX:MaxPermSize=256m ${jacoco.agent.it.arg}</argLine>
							<!-- Specific to generate mapping between tests and covered code -->
							<properties>
								<property>
									<name>listener</name>
									<value>org.sonar.java.jacoco.JUnitListener</value>
								</property>
							</properties>
							<!-- Let's put failsafe reports with surefire to have access to tests 
								failures/success reports in sonar -->
							<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
						</configuration>
					</plugin>
					<!-- Enabling use of jacoco -->
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
						<executions>
							<!-- Prepares a variable, jacoco.agent.ut.arg, that contains the info 
								to be passed to the JVM hosting the code being tested. -->
							<execution>
								<id>prepare-ut-agent</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.reportPath}</destFile>
									<propertyName>jacoco.agent.ut.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<!-- Prepares a variable, jacoco.agent.it.arg, that contains the info 
								to be passed to the JVM hosting the code being tested. -->
							<execution>
								<id>prepare-it-agent</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>prepare-agent</goal>
								</goals>
								<configuration>
									<destFile>${sonar.jacoco.itReportPath}</destFile>
									<propertyName>jacoco.agent.it.arg</propertyName>
									<append>true</append>
								</configuration>
							</execution>
							<execution>
								<id>post-test</id>
								<goals>
									<goal>report</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.codehaus.sonar-plugins.java</groupId>
					<artifactId>sonar-jacoco-listeners</artifactId>
					<version>${sonar-jacoco-listeners.version}</version>
					<scope>test</scope>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>reporting</id>
			<activation>
				<property>
					<name>lunifera.build.full</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<properties>
				<javadocJreApiVersion>7</javadocJreApiVersion>
			</properties>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jxr-plugin</artifactId>
						<version>${report.jxr.version}</version>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-changes-plugin</artifactId>
						<version>2.10</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>jira-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>versions-maven-plugin</artifactId>
						<version>${report.version.version}</version>
						<reportSets>
							<reportSet>
								<reports>
									<report>dependency-updates-report</report>
									<report>plugin-updates-report</report>
									<report>property-updates-report</report>
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
		</profile>
	</profiles>

	<developers>
		<developer>
			<id>cvgaviao</id>
			<name>Cristiano GaviÃ£o</name>
			<email>cvgaviao@gmail.com</email>
			<timezone>-3</timezone>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>florianpirchner</id>
			<name>Florian Pirchner</name>
			<email>florian.pirchner@gmail.com</email>
			<timezone>+2</timezone>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>haglo</id>
			<name>Hans-George GlÃ¶ckler</name>
			<email>hans-georg.gloeckler@uni-ulm.de</email>
			<timezone>+2</timezone>
			<roles>
				<role>Build and release manager</role>
			</roles>
		</developer>
	</developers>

	<contributors>
		<contributor>
		</contributor>
	</contributors>

	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<inherited>false</inherited>
				<configuration>
					<topSiteURL>${lunifera.site.url}</topSiteURL>
				</configuration>
				<executions>
					<execution>
						<id>attach-file</id>
						<goals>
							<goal>attach-descriptor</goal>
						</goals>
						<inherited>false</inherited>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>parse-version</id>
						<goals>
							<goal>parse-version</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.6</version>
					<configuration>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.2.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.7</source>
						<target>1.7</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>2.5.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>2.12.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${maven.site.version}</version>
					<dependencies>
						<dependency><!-- add support for ssh/scp -->
							<groupId>org.apache.maven.wagon</groupId>
							<artifactId>wagon-ssh</artifactId>
							<version>2.6</version>
						</dependency>
						<!-- support to github pages deployment -->
						<dependency>
							<groupId>net.trajano.wagon</groupId>
							<artifactId>wagon-git</artifactId>
							<version>2.0.0</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.skins</groupId>
							<artifactId>maven-fluido-skin</artifactId>
							<version>1.3.1</version>
						</dependency>
					</dependencies>
					<configuration>
						<topSiteURL>${lunifera.site.url}</topSiteURL>
						<chmod>true</chmod>
						<inputEncoding>UTF-8</inputEncoding>
						<outputEncoding>UTF-8</outputEncoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.sonar</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>4.3</version>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.sonar-plugins</groupId>
					<artifactId>maven-report</artifactId>
					<version>0.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${report.surefire.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jxr-plugin</artifactId>
					<version>${report.jxr.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jarsigner-plugin</artifactId>
					<version>1.3</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>${report.javadoc.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5</version>
					<configuration>
						<pushChanges>false</pushChanges>
						<localCheckout>true</localCheckout>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${report.license.version}</version>
					<executions>
						<execution>
							<id>attach-licenses</id>
							<goals>
								<goal>update-project-license</goal>
								<goal>add-third-party</goal>
							</goals>
							<configuration>
								<!-- <licenseResolver>classpath://org/lunifera/releng/maven/licenses</licenseResolver> -->
								<!-- <generateBundle>true</generateBundle> -->
								<!-- <dryRun>true</dryRun> -->
								<copyrightOwners>C4biz Softwares ME,Loetz KG</copyrightOwners>
								<useMissingFile>${license.useMissingFile}</useMissingFile>
								<useRepositoryMissingFiles>${license.useRepositoryMissingFiles}</useRepositoryMissingFiles>
								<failOnMissingHeader>true</failOnMissingHeader>
								<failIfWarning>${license.failIfWarning}</failIfWarning>
								<failOnNotUptodateHeader>true</failOnNotUptodateHeader>
								<encoding>UTF-8</encoding>
								<licenseMerges>
									<licenseMerge>
										The Apache Software License, Version 2.0|Apache
										License, Version
										2.0|Apache License V2.0|Apache 2|ASF
										2.0|apache-2.0|Apache
										Public License 2.0
									</licenseMerge>
									<licenseMerge>BSD License|BSD license|BSD</licenseMerge>
									<licenseMerge>MIT License|MIT license|MIT</licenseMerge>
									<licenseMerge>
										Lesser General Public License (LPGL) v 2.1|GNU
										Lesser General
										Public License, 2.1|LGPL 2.1
									</licenseMerge>
									<licenseMerge>
										Lesser General Public License (LPGL)|GNU Lesser
										General Public
										License|GNU LESSER GENERAL PUBLIC
										LICENSE|LGPL|lgpl
									</licenseMerge>
									<licenseMerge>
										COMMON DEVELOPMENT AND DISTRIBUTION LICENSE
										(CDDL) Version
										1.0|Common Development and Distribution License
										(CDDL) v1.0
									</licenseMerge>
									<licenseMerge>Indiana University Extreme! Lab Software
										License,
										vesion 1.1.1|Indiana University Extreme! Lab
										Software License</licenseMerge>
								</licenseMerges>
							</configuration>
						</execution>
					</executions>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${surefire.version}</version>
					<inherited>true</inherited>
					<configuration>
						<failIfNoTests>false</failIfNoTests>
						<parallel>none</parallel>
						<threadCount>1</threadCount>
						<includes>
							<include>**/*IntegrationTest.java</include>
						</includes>
						<systemProperties>
							<property>
								<name>project.version</name>
								<value>${project.version}</value>
							</property>
						</systemProperties>
					</configuration>
					<executions>
						<execution>
							<id>integration-test</id>
							<goals>
								<goal>integration-test</goal>
							</goals>
						</execution>
						<execution>
							<id>verify</id>
							<goals>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.fornax.toolsupport</groupId>
					<artifactId>fornax-oaw-m2-plugin</artifactId>
					<version>3.4.0</version>
					<configuration>
						<workflowEngine>mwe2</workflowEngine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eclipse.xtend</groupId>
					<artifactId>xtend-maven-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${report.version.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>animal-sniffer-maven-plugin</artifactId>
					<version>1.11</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>1.3.1</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<!-- Felix -->
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.framework</artifactId>
				<version>4.4.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.eventadmin</artifactId>
				<version>1.3.2</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.coordinator</artifactId>
				<version>1.0.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.configadmin</artifactId>
				<version>1.8.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.prefs</artifactId>
				<version>1.0.6</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.metatype</artifactId>
				<version>1.0.10</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.log</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.scr</artifactId>
				<version>1.8.2</version>
			</dependency>
			<!-- end felix -->
			<dependency>
				<groupId>org.apache.aries.subsystem</groupId>
				<artifactId>org.apache.aries.subsystem.core</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.subsystem</groupId>
				<artifactId>org.apache.aries.subsystem.api</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.subsystem</groupId>
				<artifactId>org.apache.aries.subsystem.obr</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.application</groupId>
				<artifactId>org.apache.aries.application.management</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.application</groupId>
				<artifactId>org.apache.aries.application.api</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.application</groupId>
				<artifactId>org.apache.aries.application.utils</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.application</groupId>
				<artifactId>org.apache.aries.application.modeller</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.application</groupId>
				<artifactId>org.apache.aries.application.install</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.application</groupId>
				<artifactId>org.apache.aries.application.default.local.platform</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries.application</groupId>
				<artifactId>org.apache.aries.application.deployment.management</artifactId>
				<version>${apache.aries.subsystem.version}</version>
			</dependency>
			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>2.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.aries</groupId>
				<artifactId>org.apache.aries.util</artifactId>
				<version>1.1.0</version>
			</dependency>
			<dependency>
				<groupId>org.apache.shiro</groupId>
				<artifactId>shiro-core</artifactId>
				<version>${shiro.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jcl-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>log4j-over-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-core</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.felix</groupId>
				<artifactId>org.apache.felix.fileinstall</artifactId>
				<version>3.2.6</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>hamcrest-core</artifactId>
						<groupId>org.hamcrest</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
			</dependency>
			<dependency>
				<!-- this is a OSGified version that only must be used when using mockito 
					inside container -->
				<groupId>org.lunifera.osgi</groupId>
				<artifactId>org.mockito</artifactId>
				<version>1.9.5.v201311280930</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.lunifera.osgi</groupId>
				<artifactId>org.hamcrest.core</artifactId>
				<version>1.3.0.v201303031735</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.lunifera.osgi</groupId>
				<artifactId>org.hamcrest.integration</artifactId>
				<version>1.3.0.v201305210900</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.lunifera.osgi</groupId>
				<artifactId>org.hamcrest.library</artifactId>
				<version>1.3.0.v201305281000</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.compendium</artifactId>
				<version>5.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>5.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.lunifera.osgi</groupId>
				<artifactId>org.apache.felix.gogo.runtime</artifactId>
				<version>0.10.0.v201209301036</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.lunifera.osgi</groupId>
				<artifactId>org.apache.felix.gogo.shell</artifactId>
				<version>0.10.0.v201212101605</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.enterprise</artifactId>
				<version>5.0.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.knowhowlab.osgi</groupId>
				<artifactId>org.knowhowlab.osgi.testing.utils</artifactId>
				<version>${osgi.testing.utils.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.osgi</groupId>
						<artifactId>org.osgi.core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.osgi</groupId>
						<artifactId>org.osgi.compendium</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.knowhowlab.osgi</groupId>
				<artifactId>org.knowhowlab.osgi.testing.assertions</artifactId>
				<version>${osgi.testing.utils.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.osgi</groupId>
						<artifactId>org.osgi.core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.osgi</groupId>
						<artifactId>org.osgi.compendium</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.lunifera.osgi</groupId>
			<artifactId>org.hamcrest.core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.lunifera.osgi</groupId>
			<artifactId>org.hamcrest.integration</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.lunifera.osgi</groupId>
			<artifactId>org.hamcrest.library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>