
<!--#======================================================================= -->
<!--# Copyright (c) 2012, 2014 C4biz Softwares ME, Loetz KG. -->
<!--# All rights reserved. This program and the accompanying materials -->
<!--# are made available under the terms of the Eclipse Public License v1.0 -->
<!--# which accompanies this distribution, and is available at -->
<!--# http://www.eclipse.org/legal/epl-v10.html -->
<!--# -->
<!--# Contributors: -->
<!--# Cristiano GaviÃ£o (C4biz)- initial API and implementation -->
<!--#======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.lunifera.releng.maven</groupId>
		<artifactId>org.lunifera.releng.maven.parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
		<relativePath>../org.lunifera.releng.maven.parent/pom.xml</relativePath>
	</parent>

	<artifactId>org.lunifera.releng.maven.parent.mbp</artifactId>
	<name>Releng - Parent POM for Pom-First Bundles and Fragments</name>
	<description>A parent POM aimed to set up the build of bundle projects using Maven-Bundle-Plugin/Bnd.</description>
	<packaging>pom</packaging>

	<properties>
		<mbp.version>2.4.0</mbp.version>
	</properties>

	<url>${distribution.site.url}</url>
	<distributionManagement>
		<site>
			<id>gh-pages</id>
			<name>Lunifera GitHub Pages</name>
			<url>${distribution.site.url}</url>
		</site>
	</distributionManagement>

	<profiles>
		<profile>
			<id>not-in-eclipse</id>
			<!-- activated in normal Maven build -->
			<activation>
				<property>
					<name>!m2e.version</name>
				</property>
			</activation>
			<properties>
				<maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
				<osgi-version-qualifier>${maven.build.timestamp}</osgi-version-qualifier>
			</properties>
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<artifactId>maven-clean-plugin</artifactId>
							<configuration>
								<filesets>
									<fileset>
										<directory>${basedir}</directory>
										<includes>
											<include>*.jar</include>
											<include>META-INF/</include>
											<include>OSGI-INF/</include>
										</includes>
										<followSymlinks>false</followSymlinks>
									</fileset>
								</filesets>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.felix</groupId>
							<artifactId>maven-bundle-plugin</artifactId>
							<version>${mbp.version}</version>
							<extensions>true</extensions>
							<configuration>
								<instructions>
									<Bundle-Vendor>Lunifera.org</Bundle-Vendor>
									<Bundle-Name>${project.name}</Bundle-Name>
									<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
									<Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</Bundle-Version>
									<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									<_snapshot>${osgi-version-qualifier}</_snapshot>
									<Bundle-RequiredExecutionEnvironment>JavaSE-1.7</Bundle-RequiredExecutionEnvironment>
									<_dsannotations>*</_dsannotations>
								</instructions>
							</configuration>
						</plugin>
					</plugins>
				</pluginManagement>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>in-eclipse</id>
			<!-- activated only when running in m2e (eclipse) -->
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<properties>
				<osgi-version-qualifier>qualifier</osgi-version-qualifier>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-clean-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.felix</groupId>
						<artifactId>maven-bundle-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-site-plugin</artifactId>
						<inherited>false</inherited>
						<configuration>
							<topSiteURL>${lunifera.site.url}</topSiteURL>
						</configuration>
						<executions>
							<execution>
								<id>attach-file</id>
								<goals>
									<goal>attach-descriptor</goal>
								</goals>
								<inherited>false</inherited>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>org.eclipse.m2e</groupId>
							<artifactId>lifecycle-mapping</artifactId>
							<version>1.0.0</version>
							<configuration>
								<lifecycleMappingMetadata>
									<pluginExecutions>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-dependency-plugin</artifactId>
												<versionRange>[2.0,)</versionRange>
												<goals>
													<goal>copy-dependencies</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<execute />
											</action>
										</pluginExecution>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.apache.maven.plugins</groupId>
												<artifactId>maven-antrun-plugin</artifactId>
												<versionRange>[1.0,)</versionRange>
												<goals>
													<goal>run</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<execute>
													<runOnIncremental>false</runOnIncremental>
												</execute>
											</action>
										</pluginExecution>
										<pluginExecution>
											<pluginExecutionFilter>
												<groupId>org.jacoco</groupId>
												<artifactId>jacoco-maven-plugin</artifactId>
												<versionRange>[0.6,)
												</versionRange>
												<goals>
													<goal>prepare-agent</goal>
												</goals>
											</pluginExecutionFilter>
											<action>
												<!-- m2e doesn't know what to do with jacoco, let's ignore it 
													or annoying error markers appear see http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
												<ignore />
											</action>
										</pluginExecution>
									</pluginExecutions>
								</lifecycleMappingMetadata>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.felix</groupId>
							<artifactId>maven-bundle-plugin</artifactId>
							<version>${mbp.version}</version>
							<extensions>true</extensions>
							<configuration>
								<unpackBundle>true</unpackBundle>
								<manifestLocation>${basedir}/META-INF</manifestLocation>
								<instructions>
									<Bundle-Vendor>Lunifera.org</Bundle-Vendor>
									<Bundle-Name>${project.name}</Bundle-Name>
									<Bundle-SymbolicName>${project.artifactId}</Bundle-SymbolicName>
									<Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</Bundle-Version>
									<Bundle-ActivationPolicy>lazy</Bundle-ActivationPolicy>
									<_snapshot>${osgi-version-qualifier}</_snapshot>
									<Bundle-RequiredExecutionEnvironment>JavaSE-1.7</Bundle-RequiredExecutionEnvironment>
									<_dsannotations>*</_dsannotations>
								</instructions>
							</configuration>
						</plugin>
						<plugin>
							<artifactId>maven-clean-plugin</artifactId>
						</plugin>
						<plugin>
							<artifactId>maven-dependency-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-dependencies</id>
									<phase>prepare-package</phase>
									<goals>
										<goal>copy-dependencies</goal>
									</goals>
									<configuration>
										<outputDirectory>${basedir}</outputDirectory>
										<includeScope>runtime</includeScope>
										<overWriteReleases>false</overWriteReleases>
										<overWriteSnapshots>true</overWriteSnapshots>
										<overWriteIfNewer>true</overWriteIfNewer>
									</configuration>
								</execution>
							</executions>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-antrun-plugin</artifactId>
							<executions>
								<execution>
									<id>copy-osgi-inf</id>
									<phase>package</phase>
									<goals>
										<goal>run</goal>
									</goals>
									<configuration>
										<target>
											<taskdef resource="net/sf/antcontrib/antlib.xml" />
											<taskdef resource="net/sf/antcontrib/antcontrib.properties" />
											<if>
												<available file="${project.build.outputDirectory}/OSGI-INF"
													type="dir" />
												<then>
													<echo message="Copying OSGI-INF..." level="info" />
													<delete dir="${basedir}/OSGI-INF" quiet="true" />
													<mkdir dir="${basedir}/OSGI-INF" />
													<copy todir="${basedir}/OSGI-INF">
														<fileset dir="${project.build.outputDirectory}/OSGI-INF" />
													</copy>
												</then>
											</if>
										</target>
									</configuration>
								</execution>
							</executions>
							<dependencies>
								<dependency>
									<groupId>org.apache.ant</groupId>
									<artifactId>ant</artifactId>
									<version>1.8.4</version>
								</dependency>
								<dependency>
									<groupId>ant-contrib</groupId>
									<artifactId>ant-contrib</artifactId>
									<version>1.0b3</version>
									<exclusions>
										<exclusion>
											<groupId>ant</groupId>
											<artifactId>ant</artifactId>
										</exclusion>
									</exclusions>
								</dependency>
							</dependencies>
						</plugin>
					</plugins>
				</pluginManagement>
				<resources>
					<resource>
						<!-- pde (project root) -->
						<directory>src/main/resources</directory>
						<targetPath>
							${basedir}
						</targetPath>
						<includes>
							<include>plugin.xml</include>
						</includes>
					</resource>
					<resource>
						<!-- normal (output dir , /target/classes) -->
						<directory>src/main/resources</directory>
						<targetPath>
							${project.build.outputDirectory}
						</targetPath>
					</resource>
				</resources>
			</build>
		</profile>

		<profile>
			<id>javadoc</id>
			<activation>
				<property>
					<name>lunifera.build.full</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<reporting>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${report.javadoc.version}</version>
						<configuration>
							<skip>${maven.javadoc.skip}</skip>
							<quiet>${maven.javadoc.quiet}</quiet>
							<charset>${project.reporting.outputEncoding}</charset>
							<links>
								<link>http://docs.oracle.com/javase/${javadocJreApiVersion}/docs/api/</link>
							</links>
							<!--<excludePackageNames>${maven.javadoc.excludePackageNames}</excludePackageNames> -->
							<tagletArtifacts>
								<tagletArtifact>
									<groupId>org.apache.maven.plugin-tools</groupId>
									<artifactId>maven-plugin-tools-javadoc</artifactId>
									<version>3.3</version>
								</tagletArtifact>
								<tagletArtifact>
									<groupId>org.codehaus.plexus</groupId>
									<artifactId>plexus-component-javadoc</artifactId>
									<version>1.5.5</version>
								</tagletArtifact>
							</tagletArtifacts>
						</configuration>
						<reportSets>
							<reportSet>
								<id>non-aggregate</id>
								<reports>
									<report>javadoc</report>
									<!-- <report>test-javadoc</report> -->
								</reports>
							</reportSet>
						</reportSets>
					</plugin>
				</plugins>
			</reporting>
			<build>
				<plugins>
					<!-- Generates Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>sources</id>
			<activation>
				<property>
					<name>lunifera.build.full</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<!-- Generates jar with sources -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.2.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<phase>verify</phase>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<excludeResources>true</excludeResources>
							<excludes>
								<exclude>**/jars/**</exclude>
							</excludes>
							<archive>
								<manifestEntries>
									<Bundle-ManifestVersion>2</Bundle-ManifestVersion>
									<Bundle-Name>${project.name}</Bundle-Name>
									<Bundle-SymbolicName>${project.artifactId}.source</Bundle-SymbolicName>
									<Bundle-Vendor>${project.organization.name}</Bundle-Vendor>
									<Bundle-Version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</Bundle-Version>
									<Eclipse-SourceBundle>${project.artifactId};version="${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}";roots:="."</Eclipse-SourceBundle>
								</manifestEntries>
							</archive>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>release</id>
			<activation>
				<property>
					<name>lunifera.build.release</name>
				</property>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<inherited>true</inherited>
						<configuration>
							<failFast>true</failFast>
							<fail>true</fail>
						</configuration>
						<executions>
							<execution>
								<id>check-required-profiles</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>lunifera.build.licenses</property>
										</requireProperty>
										<requireProperty>
											<property>lunifera.build.reporting</property>
										</requireProperty>
										<requireProperty>
											<property>lunifera.build.codecoverage</property>
										</requireProperty>
										<requireProperty>
											<property>lunifera.build.javadoc</property>
										</requireProperty>
										<requireProperty>
											<property>lunifera.build.sources</property>
										</requireProperty>
									</rules>
									<ignoreCache>true</ignoreCache>
									<failFast>true</failFast>
								</configuration>
							</execution>
							<execution>
								<id>check-project-files</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<phase>initialize</phase>
								<configuration>
									<rules>
										<requireFilesExist>
											<files>
												<file>LICENSE.txt</file>
												<!-- <file>README.txt</file> -->
												<!--<file>changelog.txt</file> -->
											</files>
										</requireFilesExist>
									</rules>
									<ignoreCache>true</ignoreCache>
									<failFast>true</failFast>
									<fail>true</fail>
								</configuration>
							</execution>
							<execution>
								<id>enforce-release-rules</id>
								<phase>verify</phase>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<!-- <requireActiveProfile> <message>You must sign JARs during 
											release.</message> <profiles>sign</profiles> </requireActiveProfile> -->
										<requireReleaseVersion />
										<requireProperty>
											<property>buildNumber</property>
											<regex>[0-9a-f]{40}</regex>
										</requireProperty>
									</rules>
								</configuration>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.mojo</groupId>
								<artifactId>extra-enforcer-rules</artifactId>
								<version>1.0-beta-2</version>
							</dependency>
						</dependencies>
					</plugin>

					<!-- Checks compatibility with Java API -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>animal-sniffer-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>enforce-java-api-compatibility</id>
								<phase>verify</phase>
								<goals>
									<goal>check</goal>
								</goals>
								<configuration>
									<signature>
										<groupId>org.codehaus.mojo.signature</groupId>
										<artifactId>java17</artifactId>
										<version>1.0</version>
									</signature>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.core</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.osgi</groupId>
			<artifactId>org.osgi.compendium</artifactId>
			<scope>provided</scope>
		</dependency>
	</dependencies>
</project>
