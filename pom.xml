<?xml version="1.0" encoding="UTF-8"?>
<!--#======================================================================= -->
<!--# Copyright (c) 2012, 2016 Cristiano Gavião, Loetz KG. -->
<!--# All rights reserved. This program and the accompanying materials -->
<!--# are made available under the terms of the Eclipse Public License v1.0 -->
<!--# which accompanies this distribution, and is available at -->
<!--# http://www.eclipse.org/legal/epl-v10.html -->
<!--# -->
<!--# Contributors: -->
<!--# Cristiano Gavião (C4biz)- initial API and implementation -->
<!--#======================================================================= -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>


    <groupId>org.lunifera.releng.maven</groupId>
    <artifactId>lunifera-releng-maven</artifactId>
    <name>Lunifera Master Parent POM</name>
    <description>The master parent POM of Lunifera project that is aimed to set up the build of all general Maven based projects.</description>
    <packaging>pom</packaging>
    <version>0.20.1-SNAPSHOT</version>

    <modules>
        <module>lunifera-releng-maven-licenses</module>
        <module>lunifera-releng-maven-parent-mbp</module>
        <module>lunifera-releng-maven-parent-tycho</module>
        <module>lunifera-releng-maven-fpom-logging</module>
        <module>lunifera-releng-maven-fpom-utests</module>
        <module>lunifera-releng-maven-fpom-itests</module>
        <module>lunifera-releng-maven-fpom-itests-tycho</module>
        <module>lunifera-releng-maven-fpom-mplugin</module>
        <module>lunifera-releng-maven-fpom-felix</module>
        <module>lunifera-releng-maven-fpom-node</module>
        <module>lunifera-releng-maven-fpom-equinox</module>
    </modules>

    <inceptionYear>2012</inceptionYear>

    <prerequisites>
        <maven>3.3.3</maven>
    </prerequisites>

    <organization>
        <name>Lunifera.org</name>
        <url>www.lunifera.org</url>
    </organization>

    <issueManagement>
        <system>Jira</system>
        <url>https://github.com/lunifera/lunifera-issues</url>
    </issueManagement>

    <!-- ciManagement, distributionManagement(Site) and scm should be duplicated
        for every git repository (parent pom) and in most cases for each aggregator
        due the fact that its modules uses different parents. -->

    <ciManagement>
        <system>Jenkins</system>
        <url>${lunifera.ci.server.url}${lunifera.gitrepo.name}</url>
    </ciManagement>

    <url>${lunifera.site.repository.url}</url>
    <distributionManagement>
        <repository>
            <id>lunifera-nexus-release</id>
            <name>Nexus Release Repository</name>
            <url>${distribution.repository.release.url}</url>
        </repository>
        <snapshotRepository>
            <id>lunifera-nexus-snapshots</id>
            <name>Sonatype Nexus Snapshots</name>
            <url>${distribution.repository.snapshot.url}</url>
        </snapshotRepository>
        <site>
            <id>gh-pages</id>
            <name>Lunifera GitHub Pages</name>
            <url>${distribution.site.url}</url>
        </site>
    </distributionManagement>
    <scm>
        <!-- connection and developerConnection must be added in children
            in order to use with git -->
        <connection>${lunifera.scm.connection}</connection>
        <developerConnection>${lunifera.scm.connection.dev}</developerConnection>
        <url>${lunifera.scm.url}</url>
        <tag>HEAD</tag>
    </scm>
    <!-- End -->

    <licenses>
        <license>
            <name>Eclipse Public License v1.0</name>
            <url>http://www.eclipse.org/legal/epl-v10.html</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <java.version>1.8</java.version>
        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>
        <lunifera.site.skip>false</lunifera.site.skip>
        <lunifera.deploy.skip>false</lunifera.deploy.skip>

        <lunifera.releng.version>0.20.1-SNAPSHOT</lunifera.releng.version>
        <lunifera.releng.license.repo>${lunifera.releng.version}</lunifera.releng.license.repo>

        <!-- should automatic push changes to scm repo when releasing -->
        <lunifera.release.push>false</lunifera.release.push>

        <lunifera.scm.user>lunifera</lunifera.scm.user>
        <lunifera.scm.branch>master</lunifera.scm.branch>
        <lunifera.scm.url.host>https://github.com/</lunifera.scm.url.host>
        <lunifera.scm.url>${lunifera.scm.url.host}${lunifera.scm.user}/${lunifera.gitrepo.name}/tree/${lunifera.scm.branch}</lunifera.scm.url>
        <lunifera.scm.connection.protocol>scm:git:git://</lunifera.scm.connection.protocol>
        <lunifera.scm.connection.host>github.com/</lunifera.scm.connection.host>
        <lunifera.scm.connection>${lunifera.scm.connection.protocol}${lunifera.scm.connection.host}${lunifera.scm.user}/${lunifera.gitrepo.name}.git</lunifera.scm.connection>
        <lunifera.scm.connection.dev>${lunifera.scm.connection.dev.protocol}${lunifera.scm.connection.dev.host}/${lunifera.scm.user}/${lunifera.gitrepo.name}.git</lunifera.scm.connection.dev>
        <lunifera.scm.connection.dev.protocol>scm:git:ssh://</lunifera.scm.connection.dev.protocol>
        <lunifera.scm.connection.dev.host>git@github.com</lunifera.scm.connection.dev.host>


        <!-- current profile to use: (pre-release|sandbox|retired) -->
        <lunifera.site.profile />

        <!-- protocol used to deploy the site -->
        <lunifera.site.protocol>github:</lunifera.site.protocol>

        <!-- points to the root of project's site at github -->
        <lunifera.site.root.url>http://lunifera.github.io</lunifera.site.root.url>

        <!-- the name of the git repository that the aggregator represents -->
        <lunifera.gitrepo.name>lunifera-releng-maven</lunifera.gitrepo.name>

        <!-- the url of the repository's site -->
        <!-- <lunifera.site.repository.url>${lunifera.site.root.url}${lunifera.gitrepo.name}</lunifera.site.repository.url> -->
        <lunifera.site.repository.url>${lunifera.site.root.url}${file.separator}${lunifera.gitrepo.name}</lunifera.site.repository.url>

        <!-- the complete url (to be use with distribution site settings) -->
        <!-- default behavior is maven to append /${project.artifactId} in
            the end -->
        <distribution.site.url>${lunifera.site.protocol}${lunifera.site.repository.url}</distribution.site.url>

        <!-- where to deploy the release artifacts -->
        <distribution.repository.release.url>http://maven.lunifera.org:8086/nexus/content/repositories/releases/</distribution.repository.release.url>

        <!-- where to deploy the snapshot artifacts -->
        <distribution.repository.snapshot.url>http://maven.lunifera.org:8086/nexus/content/repositories/snapshots/</distribution.repository.snapshot.url>

        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <maven.build.timestamp.format>yyyyMMddHHmmss</maven.build.timestamp.format>
        <osgi-version-qualifier>${maven.build.timestamp}</osgi-version-qualifier>
        <bundle.short.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</bundle.short.version>
        <bundle.full.version>${bundle.short.version}.${osgi-version-qualifier}</bundle.full.version>

        <!-- this properties must be set in settings.xml or using -Dlunifera.developer.home
            in command line. it defaults to the current user home -->
        <lunifera.developer.home>${user.dir}${file.separator}</lunifera.developer.home>

        <!-- indicates where to stage built repositories in local machine -->
        <lunifera.developer.home.repositories>${lunifera.developer.home}${file.separator}repositories${file.separator}</lunifera.developer.home.repositories>

        <!-- indicates where to stage built repositories in local machine -->
        <lunifera.developer.home.site>${lunifera.developer.home}STAGE-SITE${file.separator}</lunifera.developer.home.site>

        <!-- this properties must be unique for the entire system -->
        <lunifera.federated.repository.label>lunifera</lunifera.federated.repository.label>

        <!-- the branch used in the build of the project. this determines
            the behavior of some steps and its properties. (branch latest head, milestone,
            release) -->
        <lunifera.build.branch>head</lunifera.build.branch>

        <lunifera.stage.repository.root>${lunifera.developer.home.repositories}${lunifera.federated.repository.label}${file.separator}${lunifera.build.platform.name}${file.separator}${lunifera.build.branch}${file.separator}</lunifera.stage.repository.root>

        <lunifera.stage.repository.local.dir>${lunifera.stage.repository.root}${project.artifactId}${file.separator}${bundle.full.version}${file.separator}</lunifera.stage.repository.local.dir>

        <!-- this indicates whether an old p2 published should be kept or
            not. this should be determined by the builder.brach being used. -->
        <lunifera.stage.repository.keep.old>false</lunifera.stage.repository.keep.old>

        <!-- in order to generate a short version of reports for testing
            purposes -->
        <lunifera.report.short>false</lunifera.report.short>

        <!-- MAVEN PLUGINS -->
        <takari.version>1.11.12</takari.version>
        <eclipse.aether.version>1.0.0.v20140518</eclipse.aether.version>
        <maven.site.version>3.4</maven.site.version>
        <maven.source.version>2.4</maven.source.version>
        <maven.install.version>2.5.2</maven.install.version>
        <maven.compile.version>3.5.1</maven.compile.version>
        <maven.resources.version>2.7</maven.resources.version>
        <maven.jar.version>2.6</maven.jar.version>
        <maven.clean.version>3.0.0</maven.clean.version>
        <maven.antrun.version>1.8</maven.antrun.version>
        <maven.checkstyle.version>2.17</maven.checkstyle.version>
        <maven.assembly.version>2.6</maven.assembly.version>
        <maven.jarsigner.version>1.4</maven.jarsigner.version>
        <maven.deploy.version>2.8.2</maven.deploy.version>
        <maven.gpg.version>1.6</maven.gpg.version>
        <maven.enforcer.version>1.4.1</maven.enforcer.version>
        <maven.animalsniffer.version>1.14</maven.animalsniffer.version>
        <maven.surefire.version>2.19.1</maven.surefire.version>
        <maven.projectinfo.version>2.8.1</maven.projectinfo.version>
        <maven.build.helper.plugin>1.10</maven.build.helper.plugin>
        <maven.findbugs.plugin>3.0.3</maven.findbugs.plugin>
        <maven.dependency.version>2.10</maven.dependency.version>
        <maven.property.version>1.0.0</maven.property.version>

        <!-- DEPENDENCIES VERSIONS -->
        <wagon.ssh.version>2.9</wagon.ssh.version>
        <wagon.git.version>2.0.3</wagon.git.version>


        <!-- Tools -->
        <guava.version>18.0</guava.version>
        <pojosr.version>0.2.1</pojosr.version>

        <!-- SECURITY -->
        <shiro.version>1.2.3</shiro.version>

        <!-- OSGI -->
        <osgi.core.version>6.0.0</osgi.core.version>
        <osgi.compendium.version>6.0.0</osgi.compendium.version>
        <osgi.annotation.version>6.0.1</osgi.annotation.version>
        <pax.url.assembly.version>2.4.5</pax.url.assembly.version>
        <pax.url.reference.version>2.4.5</pax.url.reference.version>

        <!-- LOGGING AND MONITORING -->
        <slf4j.version>1.7.12</slf4j.version>
        <logback.version>1.1.3</logback.version>

        <!-- REPORTING -->
        <report.taglist.version>2.4</report.taglist.version>
        <report.javadoc.version>2.10.3</report.javadoc.version>
        <report.license.version>1.8</report.license.version>
        <report.version.version>2.2</report.version.version>
        <report.surefire.version>${maven.surefire.version}</report.surefire.version>
        <report.jxr.version>2.5</report.jxr.version>
        <maven.doxia.module.markdown.version>1.7</maven.doxia.module.markdown.version>
        <maven.fluido.skin.version>1.4</maven.fluido.skin.version>


        <!-- license configuration -->
        <!-- default license to use for children -->
        <license.licenseName>epl_v1</license.licenseName>
        <license.copyrightOwners>C4biz Softwares ME, Loetz KG</license.copyrightOwners>

        <!-- ************************ -->
        <!-- TESTING -->
        <!-- JACOCO and Sonar/Reporting settings -->
        <sonar.maven.version>2.7.1</sonar.maven.version>
        <jacoco.version>0.7.5.201505241946</jacoco.version>
        <report.sonar.version>0.1</report.sonar.version>
        <paxexam.version>4.8.0</paxexam.version>
        <junit.version>4.12</junit.version>
        <mockito.version>1.10.19</mockito.version>
        <hamcrest.version>1.3</hamcrest.version>
        <powermock.version>1.6.2</powermock.version>

        <!-- The Sonar Jacoco Listener for JUnit to extract coverage details
            per test -->
        <sonar-jacoco-listeners.version>3.8</sonar-jacoco-listeners.version>

        <!-- the base for CI URL -->
        <lunifera.ci.server.url>http://jenkins.lunifera.org:8083/job/</lunifera.ci.server.url>


    </properties>

    <profiles>
        <profile>
            <!-- profile used to setup a snapshot release -->
            <!-- it must be activated when there isn't lunifera.build.branch
                defined. -->
            <id>latest</id>
            <activation>
                <property>
                    <name>!lunifera.build.branch</name>
                </property>
            </activation>
            <properties>
                <lunifera.build.branch>latest</lunifera.build.branch>
                <lunifera.stage.artifact.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</lunifera.stage.artifact.version>
                <!-- is used to request that repositories that was generated
                    and exported by old buildings do not be touched. -->
                <lunifera.stage.repository.keep.old>false</lunifera.stage.repository.keep.old>
            </properties>
        </profile>

        <profile>
            <!-- profile used to setup a milestone release -->
            <id>milestone</id>
            <activation>
                <property>
                    <name>lunifera.build.branch</name>
                    <value>milestone</value>
                </property>
            </activation>
            <properties>
                <lunifera.build.branch>milestone</lunifera.build.branch>
                <lunifera.stage.artifact.version>M${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}.${osgi-version-qualifier}</lunifera.stage.artifact.version>
                <lunifera.stage.repository.keep.old>true</lunifera.stage.repository.keep.old>
            </properties>
        </profile>

        <profile>
            <!-- profile used to setup a GA release -->
            <id>GA</id>
            <activation>
                <property>
                    <name>lunifera.build.branch</name>
                    <value>release</value>
                </property>
            </activation>
            <properties>
                <lunifera.build.branch>release</lunifera.build.branch>
                <lunifera.stage.artifact.version>${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}</lunifera.stage.artifact.version>
                <lunifera.stage.repository.keep.old>true</lunifera.stage.repository.keep.old>
            </properties>
        </profile>

        <profile>
            <!-- profile used to setup a root project. A root project is
                the parent of a multiple projects in a git repository and normally contain
                children -->
            <id>whenIsRootProject</id>
            <activation>
                <file>
                    <exists>.lunifera.releng.root</exists>
                    <missing>.lunifera.releng.aggregator</missing>
                </file>
            </activation>
            <properties>
                <lunifera.scm.url>${lunifera.scm.url.host}${lunifera.scm.user}/${lunifera.gitrepo.name}</lunifera.scm.url>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.danielflower.mavenplugins</groupId>
                        <artifactId>multi-module-maven-release-plugin</artifactId>
                        <configuration>
                            <releaseGoals>
                                <releaseGoal>clean</releaseGoal>
                                <releaseGoal>site</releaseGoal>
                                <releaseGoal>deploy</releaseGoal>
                            </releaseGoals>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${report.jxr.version}</version>
                        <configuration>
                            <aggregate>true</aggregate>
                            <skip>${lunifera.report.short}</skip>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <reportSets>
                            <reportSet>
                                <id>javadoc-aggregate</id>
                                <configuration>
                                    <detectLinks>true</detectLinks>
                                    <quiet>true</quiet>
                                    <skip>${lunifera.skip.reports}</skip>
                                </configuration>
                                <reports>
                                    <report>aggregate</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${report.surefire.version}</version>
                        <configuration>
                            <skipFailsafeReport>${lunifera.skip.reports}</skipFailsafeReport>
                            <skipSurefireReport>${lunifera.skip.reports}</skipSurefireReport>
                            <aggregate>true</aggregate>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${report.project-info.version}</version>
                        <configuration>
                            <dependencyDetailsEnabled>${lunifera.allow.reports}</dependencyDetailsEnabled>
                            <dependencyLocationsEnabled>${lunifera.allow.reports}</dependencyLocationsEnabled>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <!-- distribution-management, index,
                                        dependencies, help, issue-tracking, plugins, cim, license, dependency-management,
                                        mailing-list, project-team, dependency-convergence, scm, plugin-management,
                                        modules, summary -->
                                    <report>index</report>
                                    <report>summary</report>
                                    <report>modules</report>
                                    <report>project-team</report>
                                    <report>license</report>
                                    <report>dependency-convergence</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <!-- profile used to add reports to generated maven site when
                releasing for non-root modules -->
            <id>full-project-info-report</id>
            <activation>
                <file>
                    <missing>.lunifera.releng.root</missing>
                </file>
                <property>
                    <name>lunifera.build.release</name>
                </property>
            </activation>
            <properties>
                <javadocJreApiVersion>7</javadocJreApiVersion>
                <lunifera.allow.reports>true</lunifera.allow.reports>
                <lunifera.skip.reports>false</lunifera.skip.reports>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-site-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-file</id>
                                <goals>
                                    <goal>attach-descriptor</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-jxr-plugin</artifactId>
                        <version>${report.jxr.version}</version>
                        <configuration>
                            <skip>${lunifera.skip.reports}</skip>
                        </configuration>
                    </plugin>
                    <!-- <plugin> -->
                    <!-- <groupId>org.apache.maven.plugins</groupId> -->
                    <!-- <artifactId>maven-changes-plugin</artifactId> -->
                    <!-- <version>2.11</version> -->
                    <!-- <reportSets> -->
                    <!-- <reportSet> -->
                    <!-- <reports> -->
                    <!-- <report>jira-report</report> -->
                    <!-- </reports> -->
                    <!-- </reportSet> -->
                    <!-- </reportSets> -->
                    <!-- </plugin> -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>${report.version.version}</version>
                        <configuration>
                            <skip>${lunifera.skip.reports}</skip>
                            <autoLinkItems>true</autoLinkItems>
                            <processProperties>true</processProperties>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <report>dependency-updates-report</report>
                                    <report>plugin-updates-report</report>
                                    <report>property-updates-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>taglist-maven-plugin</artifactId>
                        <version>${report.taglist.version}</version>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <version>${report.license.version}</version>
                        <configuration>
                            <verbose>false</verbose>
                            <quiet>true</quiet>
                            <skipThirdPartyReport>${lunifera.skip.reports}</skipThirdPartyReport>
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <id>licenses-report</id>
                                <reports>
                                    <report>third-party-report</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-project-info-reports-plugin</artifactId>
                        <version>${report.project-info.version}</version>
                        <configuration>
                            <dependencyDetailsEnabled>false</dependencyDetailsEnabled>
                            <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                            <!-- <dependencyDetailsEnabled>${lunifera.allow.reports}</dependencyDetailsEnabled> -->
                            <!-- <dependencyLocationsEnabled>${lunifera.allow.reports}</dependencyLocationsEnabled> -->
                        </configuration>
                        <reportSets>
                            <reportSet>
                                <reports>
                                    <!-- distribution-management, index,
                                        dependencies, help, issue-tracking, plugins, cim, license, dependency-management,
                                        mailing-list, project-team, dependency-convergence, scm, plugin-management,
                                        modules, summary -->
                                    <report>index</report>
                                    <report>cim</report>
                                    <report>dependencies</report>
                                    <report>dependency-convergence</report>
                                    <report>dependency-info</report>
                                    <report>dependency-management</report>
                                    <report>distribution-management</report>
                                    <report>issue-tracking</report>
                                    <report>license</report>
                                    <report>plugin-management</report>
                                    <report>plugins</report>
                                    <report>scm</report>
                                    <report>summary</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <!-- Just in case the developer has forgotten to set lunifera.developer.home
                in settings.xml -->
            <id>set.workspace.location</id>
            <activation>
                <property>
                    <name>!lunifera.developer.home</name>
                </property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <properties>
                <lunifera.developer.home>${env.HOME}${file.separator}lunifera-dev${file.separator}</lunifera.developer.home>
                <lunifera.stage.site.dir>${lunifera.developer.home}site${file.separator}</lunifera.stage.site.dir>
            </properties>
        </profile>

        <profile>
            <id>prepare-for-release</id>
            <activation>
                <property>
                    <name>lunifera.build.release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-enforcer-plugin</artifactId>
                        <inherited>true</inherited>
                        <configuration>
                            <failFast>true</failFast>
                            <fail>true</fail>
                            <ignoreCache>true</ignoreCache>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check-project-files</id>
                                <goals>
                                    <goal>enforce</goal>
                                </goals>
                                <phase>initialize</phase>
                                <configuration>
                                    <rules>
                                        <requireFilesExist>
                                            <files>
                                                <file>LICENSE.txt</file>
                                                <!-- <file>NOTICE.txt</file> -->
                                                <!-- <file>README.txt</file> -->
                                                <!--<file>changelog.txt</file> -->
                                            </files>
                                        </requireFilesExist>
                                    </rules>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <!-- plugin used to clean the latest snapshot build -->
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>remove-old-artifacts</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>remove-project-artifact</goal>
                                </goals>
                                <configuration>
                                    <removeAll>false</removeAll>
                                    <!-- When true, remove all built artifacts
                                        including all versions. When false, remove all built artifacts of this project
                                        version -->
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>setTestCodeCoverageInsideJenkins</id>
            <activation>
                <property>
                    <name>env.WORKSPACE</name>
                </property>
            </activation>
            <properties>
                <jacoco.outputDir>${env.WORKSPACE}/target/jacoco</jacoco.outputDir>
            </properties>
        </profile>

        <profile>
            <id>setTestCodeCoverageOutJenkins</id>
            <activation>
                <property>
                    <name>!env.WORKSPACE</name>
                </property>
            </activation>
            <properties>
                <jacoco.outputDir>${project.basedir}/../target/jacoco</jacoco.outputDir>
            </properties>
        </profile>

        <profile>
            <!-- profile added in order to bypass the issues cause by new
                jdk 1.8 javadoc lint -->
            <id>doclint-java8-disable</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <properties>
                <javadoc.opts>-Xdoclint:none</javadoc.opts>
            </properties>
        </profile>

        <profile>
            <!-- This profile is used to setup a code coverage using Jacoco
                that will be sent for SonarQube. -->
            <!-- Sonar/Jacoco integration. The sonar.host.url must be defined
                in a profile inside setting.xml. Note that you need to call both profiles
                when to execute sonar using: 'mvn sonar:sonar -Dlunifera.build.test.coverage'.
                <sonar.host.url>http://localhost:9000/</sonar.host.url> -->
            <id>withTestCodeCoverage</id>
            <activation>
                <property>
                    <name>lunifera.build.test.coverage</name>
                </property>
            </activation>
            <properties>
                <argLine>-Xmx1024m</argLine>

                <lunifera.jacoco.include>*/**</lunifera.jacoco.include>

                <!-- Tells Sonar to use jacoco for coverage results -->
                <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>

                <!-- Tells Sonar where the Jacoco coverage result file is
                    located for Integration Tests -->
                <sonar.jacoco.itReportPath>${jacoco.outputDir}/${jacoco.out.it.file}</sonar.jacoco.itReportPath>

                <sonar.language>java</sonar.language>

                <sonar.report.export.path>issues</sonar.report.export.path>

                <sonar.verbose>false</sonar.verbose>

                <sonar.jacoco.reportMissing.force.zero>true</sonar.jacoco.reportMissing.force.zero>

                <!-- Jacoco output file for UTs -->
                <jacoco.out.ut.file>jacoco-ut.exec</jacoco.out.ut.file>

                <!-- Tells Sonar where the Jacoco coverage result file is
                    located for Unit Tests -->
                <sonar.jacoco.reportPath>${jacoco.outputDir}/${jacoco.out.ut.file}</sonar.jacoco.reportPath>

                <!-- Jacoco output file for ITs -->
                <jacoco.out.it.file>jacoco-it.exec</jacoco.out.it.file>

                <!-- where sonar will find the junit reports -->
                <sonar.junit.reportsPath>target/surefire-reports</sonar.junit.reportsPath>
                <sonar.junit.itReportsPath>target/failsafe-reports</sonar.junit.itReportsPath>

            </properties>
            <build>
                <pluginManagement>
                    <plugins>
                        <!-- Setup jacoco -->
                        <plugin>
                            <groupId>org.jacoco</groupId>
                            <artifactId>jacoco-maven-plugin</artifactId>
                            <version>${jacoco.version}</version>
                            <configuration>
                                <append>true</append>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
                <plugins>
                    <!-- Enabling use of jacoco -->
                    <plugin>
                        <groupId>org.jacoco</groupId>
                        <artifactId>jacoco-maven-plugin</artifactId>
                        <version>${jacoco.version}</version>
                        <executions>
                            <!-- Prepares a variable, jacoco.agent.ut.arg,
                                that contains the info to be passed to the JVM hosting the code being tested. -->
                            <execution>
                                <id>prepare-ut-agent</id>
                                <goals>
                                    <goal>prepare-agent</goal>
                                </goals>
                                <phase>process-test-classes</phase>
                                <configuration>
                                    <destFile>${sonar.jacoco.reportPath}</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-report</id>
                                <goals>
                                    <goal>report</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <dataFile>${sonar.jacoco.reportPath}</dataFile>
                                </configuration>
                            </execution>
                            <execution>
                                <!-- Prepares a variable, jacoco.agent.it.arg,
                                    that contains the info to be passed to the JVM hosting the code being tested. -->
                                <id>prepare-it-agent</id>
                                <goals>
                                    <goal>prepare-agent-integration</goal>
                                </goals>
                                <phase>pre-integration-test</phase>
                                <configuration>
                                    <destFile>${sonar.jacoco.itReportPath}</destFile>
                                </configuration>
                            </execution>
                            <execution>
                                <id>default-report-itest</id>
                                <goals>
                                    <goal>report-integration</goal>
                                </goals>
                                <phase>verify</phase>
                                <configuration>
                                    <dataFile>${sonar.jacoco.itReportPath}</dataFile>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
            <reporting>
                <plugins>
                    <!-- <plugin> -->
                    <!-- <groupId>org.codehaus.sonar-plugins</groupId> -->
                    <!-- <artifactId>maven-report</artifactId> -->
                    <!-- <version>${report.sonar.version}</version> -->
                    <!-- <configuration> -->
                    <!-- <sonar.host.url>${sonar.host.url}</sonar.host.url> -->
                    <!-- </configuration> -->
                    <!-- </plugin> -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-report-plugin</artifactId>
                        <version>${report.surefire.version}</version>
                        <inherited>true</inherited>
                        <reportSets>
                            <reportSet>
                                <id>tests</id>
                                <reports>
                                    <report>report-only</report>
                                </reports>
                            </reportSet>
                            <reportSet>
                                <id>integration-tests</id>
                                <reports>
                                    <report>failsafe-report-only</report>
                                </reports>
                            </reportSet>
                        </reportSets>
                    </plugin>
                </plugins>
            </reporting>
        </profile>

        <profile>
            <id>update-licenses</id>
            <activation>
                <property>
                    <name>lunifera.build.test.coverage</name>
                </property>
            </activation>
            <properties>
                <license.skipCheckLicense>true</license.skipCheckLicense>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <inherited>true</inherited>
                        <configuration>
                            <verbose>true</verbose>
                            <acceptPomPackaging>true</acceptPomPackaging>
                            <deployMissingFile>false</deployMissingFile>
                            <useRepositoryMissingFiles>true</useRepositoryMissingFiles>
                            <useMissingFile>true</useMissingFile>
                            <failIfWarning>true</failIfWarning>
                            <useAsMissingFileRepository>org.lunifera.releng.maven:lunifera-releng-maven-licenses:${lunifera.releng.license.repo}</useAsMissingFileRepository>
                            <skipUpdateProjectLicense>false</skipUpdateProjectLicense>
                            <generateBundle>true</generateBundle>
                            <copyrightOwners>${license.copyrightOwners}</copyrightOwners>
                        </configuration>
                        <executions>
                            <execution>
                                <id>update-license-files</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>update-project-license</goal>
                                    <goal>add-third-party</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- profile used to check the license information in the projects
                It was associate to the -Dlunifera.build.test.coverage property that is used
                when testing with coverage data. This way developer local builds can be faster. -->
            <id>check-license</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>license-maven-plugin</artifactId>
                        <inherited>true</inherited>
                        <configuration>
                            <verbose>false</verbose>
                            <acceptPomPackaging>true</acceptPomPackaging>
                            <useRepositoryMissingFiles>true</useRepositoryMissingFiles>
                            <useMissingFile>true</useMissingFile>
                            <failIfWarning>true</failIfWarning>
                            <generateBundle>true</generateBundle>
                            <useAsMissingFileRepository>org.lunifera.releng.maven:lunifera-releng-maven-licenses:${lunifera.releng.license.repo}</useAsMissingFileRepository>
                            <failOnMissingHeader>true</failOnMissingHeader>
                            <failOnNotUptodateHeader>true</failOnNotUptodateHeader>
                            <roots>
                                <root>src/main/java</root>
                                <root>src/test/java</root>
                            </roots>
                        </configuration>
                        <executions>
                            <execution>
                                <id>check-file-header</id>
                                <goals>
                                    <goal>check-file-header</goal>
                                </goals>
                                <phase>process-sources</phase>
                                <configuration>
                                    <excludes>
                                        <exclude>**/THIRD-PARTY.properties</exclude>
                                    </excludes>
                                </configuration>
                            </execution>
                            <execution>
                                <id>update-license-files</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>update-project-license</goal>
                                    <goal>add-third-party</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <!-- profile used to setup the environment for eclipse/m2e development -->
            <id>lifecycle-mapping-in-eclipse</id>
            <!-- activated only when running in m2e (eclipse) -->
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-dependency-plugin</artifactId>
                                                <versionRange>[2.0,)</versionRange>
                                                <goals>
                                                    <goal>copy-dependencies</goal>
                                                    <goal>unpack</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <ignore />
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.apache.maven.plugins</groupId>
                                                <artifactId>maven-antrun-plugin</artifactId>
                                                <versionRange>[1.0,)</versionRange>
                                                <goals>
                                                    <goal>run</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <runOnIncremental>false</runOnIncremental>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.jacoco</groupId>
                                                <artifactId>jacoco-maven-plugin</artifactId>
                                                <versionRange>[0.6,)
                                                </versionRange>
                                                <goals>
                                                    <goal>prepare-agent</goal>
                                                    <goal>prepare-agent-integration</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <!-- m2e doesn't know what
                                                    to do with jacoco, let's ignore it or annoying error markers appear see http://wiki.eclipse.org/M2E_plugin_execution_not_covered -->
                                                <ignore />
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.codehaus.mojo</groupId>
                                                <artifactId>license-maven-plugin</artifactId>
                                                <versionRange>[1.7,)</versionRange>
                                                <goals>
                                                    <goal>add-third-party</goal>
                                                    <goal>update-project-license</goal>
                                                    <goal>update-file-header</goal>
                                                    <goal>check-file-header</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <ignore />
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.ops4j.pax.exam</groupId>
                                                <artifactId>maven-paxexam-plugin</artifactId>
                                                <versionRange>[1.2.4,)</versionRange>
                                                <goals>
                                                    <goal>
                                                        generate-depends-file
                                                    </goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <runOnIncremental>false</runOnIncremental>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

    <developers>
        <developer>
            <id>cvgaviao</id>
            <name>Cristiano Gavião</name>
            <email>cvgaviao@gmail.com</email>
            <timezone>-3</timezone>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>florianpirchner</id>
            <name>Florian Pirchner</name>
            <email>florian.pirchner@gmail.com</email>
            <timezone>+2</timezone>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
            <id>klemens.edler</id>
            <name>Klemens Edler</name>
            <email>klemens.edler@gmail.com</email>
            <timezone>+2</timezone>
            <roles>
                <role>Developer</role>
            </roles>
        </developer>
        <developer>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Hans-George Glöckler</name>
            <email>hans-georg.gloeckler@uni-ulm.de</email>
            <timezone>+2</timezone>
            <roles>
                <role>Build and release manager</role>
            </roles>
        </contributor>
    </contributors>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <id>parse-version</id>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- to be executed only for this POM -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <inherited>false</inherited>
                <configuration>
                    <stagingDirectory>${lunifera.developer.home.site}</stagingDirectory>
                    <siteDirectory>${project.basedir}/src/site</siteDirectory>
                    <topSiteURL>${lunifera.site.root.url}</topSiteURL>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-file</id>
                        <goals>
                            <goal>attach-descriptor</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- Checks compatibility with Java API -->
            <!-- not working with java-1.8 -->
            <!-- <plugin> -->
            <!-- <groupId>org.codehaus.mojo</groupId> -->
            <!-- <artifactId>animal-sniffer-maven-plugin</artifactId> -->
            <!-- <configuration> -->
            <!-- <signature> -->
            <!-- <groupId>org.codehaus.mojo.signature</groupId> -->
            <!-- <artifactId>java17</artifactId> -->
            <!-- <version>1.0</version> -->
            <!-- </signature> -->
            <!-- </configuration> -->
            <!-- <executions> -->
            <!-- <execution> -->
            <!-- <id>enforce-java-api-compatibility</id> -->
            <!-- <phase>test</phase> -->
            <!-- <inherited>true</inherited> -->
            <!-- <goals> -->
            <!-- <goal>check</goal> -->
            <!-- </goals> -->
            <!-- </execution> -->
            <!-- </executions> -->
            <!-- </plugin> -->
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${maven.build.helper.plugin}</version>
                    <executions>
                        <execution>
                            <id>parse-version</id>
                            <goals>
                                <goal>parse-version</goal>
                            </goals>
                            <phase>validate</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-project-info-reports-plugin</artifactId>
                    <version>${maven.projectinfo.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${maven.source.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${maven.compile.version}</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-install-plugin</artifactId>
                    <version>${maven.install.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven.resources.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven.surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${maven.clean.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${maven.antrun.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${maven.findbugs.plugin}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar.maven.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${maven.checkstyle.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>${maven.site.version}</version>
                    <inherited>true</inherited>
                    <configuration>
                        <stagingDirectory>${lunifera.developer.home.site}</stagingDirectory>
                        <topSiteURL>${lunifera.site.root.url}</topSiteURL>
                        <siteDirectory>${basedir}${file.separator}src${file.separator}site</siteDirectory>
                        <chmod>true</chmod>
                        <inputEncoding>UTF-8</inputEncoding>
                        <outputEncoding>UTF-8</outputEncoding>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <!-- add support for ssh/scp -->
                            <groupId>org.apache.maven.wagon</groupId>
                            <artifactId>wagon-ssh</artifactId>
                            <version>${wagon.ssh.version}</version>
                        </dependency>
                        <!-- support to github pages deployment http://site.trajano.net/wagon-git/ -->
                        <dependency>
                            <groupId>net.trajano.wagon</groupId>
                            <artifactId>wagon-git</artifactId>
                            <version>${wagon.git.version}</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.maven.skins</groupId>
                            <artifactId>maven-fluido-skin</artifactId>
                            <version>${maven.fluido.skin.version}</version>
                        </dependency>
                        <dependency>
                            <!-- To use the Markdown format -->
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-markdown</artifactId>
                            <version>${maven.doxia.module.markdown.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-report-plugin</artifactId>
                    <version>${report.surefire.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jxr-plugin</artifactId>
                    <version>${report.jxr.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jarsigner-plugin</artifactId>
                    <version>${maven.jarsigner.version}</version>
                    <configuration>
                        <verify>true</verify>
                        <storetype>jks</storetype>
                        <tsa>https://timestamp.geotrust.com/tsa</tsa>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-gpg-plugin</artifactId>
                    <version>${maven.gpg.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${report.javadoc.version}</version>
                    <configuration>
                        <skip>${maven.javadoc.skip}</skip>
                        <quiet>${maven.javadoc.quiet}</quiet>
                        <charset>${project.reporting.outputEncoding}</charset>
                        <additionalparam>${javadoc.opts}</additionalparam>
                        <tagletArtifacts>
                            <tagletArtifact>
                                <groupId>org.apache.maven.plugin-tools</groupId>
                                <artifactId>maven-plugin-tools-javadoc</artifactId>
                                <version>3.4</version>
                            </tagletArtifact>
                            <tagletArtifact>
                                <groupId>org.codehaus.plexus</groupId>
                                <artifactId>plexus-component-javadoc</artifactId>
                                <version>1.6</version>
                            </tagletArtifact>
                        </tagletArtifacts>
                        <additionalDependencies>
                            <additionalDependency>
                                <groupId>org.osgi</groupId>
                                <artifactId>osgi.core</artifactId>
                                <version>${osgi.core.version}</version>
                            </additionalDependency>
                            <additionalDependency>
                                <groupId>org.osgi</groupId>
                                <artifactId>osgi.annotation</artifactId>
                                <version>${osgi.annotation.version}</version>
                            </additionalDependency>
                        </additionalDependencies>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${maven.deploy.version}</version>
                    <configuration>
                        <skip>${lunifera.deploy.skip}</skip>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${report.version.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>animal-sniffer-maven-plugin</artifactId>
                    <version>${maven.animalsniffer.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${maven.enforcer.version}</version>
                    <dependencies>
                        <dependency>
                            <groupId>org.codehaus.mojo</groupId>
                            <artifactId>extra-enforcer-rules</artifactId>
                            <version>1.0-beta-4</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${report.license.version}</version>
                    <configuration>
                        <verbose>false</verbose>
                        <quiet>true</quiet>
                        <sortArtifactByName>true</sortArtifactByName>
                        <failIfWarning>true</failIfWarning>
                        <excludedLicenses>
                            <excludedLicense>
                                GNU General Public License
                                (GPL) version 1.0
                            </excludedLicense>
                            <excludedLicense>
                                GNU General Public License
                                (GPL) version 2.0
                            </excludedLicense>
                            <excludedLicense>
                                GNU General Public License
                                (GPL) version 3.0
                            </excludedLicense>
                        </excludedLicenses>
                        <licenseMerges>
                            <licenseMerge>
                                The Apache Software
                                License,
                                Version 2.0|Apache
                                License, Version
                                2.0|Apache
                                License V2.0|Apache 2|ASF
                                2.0|apache-2.0|Apache
                                Public
                                License 2.0
                            </licenseMerge>
                            <licenseMerge>BSD License|BSD
                                license|BSD</licenseMerge>
                            <licenseMerge>MIT License|MIT
                                license|MIT</licenseMerge>
                            <licenseMerge>
                                Lesser General Public
                                License
                                (LPGL) v 2.1|GNU
                                Lesser
                                General
                                Public
                                License, 2.1|LGPL
                                2.1
                            </licenseMerge>
                            <licenseMerge>
                                Lesser General Public
                                License
                                (LPGL)|GNU Lesser
                                General Public
                                License|GNU LESSER
                                GENERAL PUBLIC
                                LICENSE|LGPL|lgpl
                            </licenseMerge>
                            <licenseMerge>
                                COMMON DEVELOPMENT AND
                                DISTRIBUTION LICENSE
                                (CDDL)
                                Version
                                1.0|Common Development
                                and Distribution
                                License
                                (CDDL)
                                v1.0
                            </licenseMerge>
                            <licenseMerge>Indiana University
                                Extreme! Lab
                                Software
                                License,
                                vesion 1.1.1|Indiana
                                University
                                Extreme! Lab
                                Software License</licenseMerge>
                        </licenseMerges>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.nuiton.processor</groupId>
                            <artifactId>nuiton-processor</artifactId>
                            <version>1.3</version>
                        </dependency>
                        <dependency>
                            <groupId>org.freemarker</groupId>
                            <artifactId>freemarker</artifactId>
                            <version>2.3.23</version>
                        </dependency>
                        <dependency>
                            <groupId>org.apache.commons</groupId>
                            <artifactId>commons-lang3</artifactId>
                            <version>3.4</version>
                        </dependency>
                        <dependency>
                            <groupId>commons-collections</groupId>
                            <artifactId>commons-collections</artifactId>
                            <version>3.2.2</version>
                        </dependency>
                        <dependency>
                            <groupId>commons-io</groupId>
                            <artifactId>commons-io</artifactId>
                            <version>2.4</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>com.github.danielflower.mavenplugins</groupId>
                    <artifactId>multi-module-maven-release-plugin</artifactId>
                    <version>1.4.2</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${maven.dependency.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.10</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>2.6</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.lunifera.releng.maven</groupId>
                <artifactId>lunifera-releng-maven-licenses</artifactId>
                <version>${lunifera.releng.license.repo}</version>
                <classifier>third-party</classifier>
                <type>properties</type>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.annotation</artifactId>
                <version>${osgi.annotation.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.core</artifactId>
                <version>${osgi.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>osgi.cmpn</artifactId>
                <version>${osgi.compendium.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>
            <dependency>
                <!-- add support for ssh/scp -->
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>2.10</version>
            </dependency>
            <!-- support to github pages deployment http://site.trajano.net/wagon-git/ -->
            <dependency>
                <groupId>net.trajano.wagon</groupId>
                <artifactId>wagon-git</artifactId>
                <version>2.0.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven.skins</groupId>
                <artifactId>maven-fluido-skin</artifactId>
                <version>1.4</version>
            </dependency>
            <dependency>
                <!-- To use the Markdown format -->
                <groupId>org.apache.maven.doxia</groupId>
                <artifactId>doxia-module-markdown</artifactId>
                <version>${maven.doxia.module.markdown.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
</project>